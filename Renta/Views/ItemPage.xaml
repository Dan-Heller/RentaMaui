<?xml version="1.0" encoding="utf-8" ?>

<ContentPage
    BackgroundColor="White"
    Shell.ForegroundColor="Black"
    Shell.NavBarIsVisible="true"
    Shell.TabBarIsVisible="False"
    Shell.TitleColor="MediumPurple"
    Style="{StaticResource DefaultPageStyle}"
    Title="ItemPage"
    x:Class="Renta.ItemPage"
    x:DataType="ViewModels:ItemPageViewModel"
    x:Name="This"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:Models="clr-namespace:Renta.Models"
    xmlns:ViewModels="clr-namespace:Renta.ViewModels"
    xmlns:controls="clr-namespace:Renta.Controls"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:xc="clr-namespace:XCalendar.Maui.Views;assembly=XCalendar.Maui">

    <ContentPage.Resources>
        <!--  Returns true if all bindings evaluate to true  -->
        <!-- <mct:VariableMultiValueConverter ConditionType="All" x:Key="AllTrueConverter" /> -->
        <!--  ~1~  Inverts a binded boolean value  @1@  -->
        <!-- <mct:InvertedBoolConverter x:Key="InvertedBoolConverter" /> -->
        <!-- <ResourceDictionary> -->
        <!--     <Style TargetType="Label" x:Key="stlBoardTitle"> -->
        <!--         <Setter Property="Padding" Value="0,30,0,5" /> -->
        <!--         <Setter Property="TextColor" Value="#a5a2a2" /> -->
        <!--         <Setter Property="FontSize" Value="16" /> -->
        <!--         <Setter Property="HorizontalOptions" Value="Center" /> -->
        <!--     </Style> -->
        <!--    -->
        <!--     <Style TargetType="Label" x:Key="stlBoardDesc"> -->
        <!--         <Setter Property="FontAttributes" Value="Bold" /> -->
        <!--         <Setter Property="FontSize" Value="16" /> -->
        <!--         <Setter Property="HorizontalOptions" Value="Center" /> -->
        <!--     </Style> -->
        <!-- </ResourceDictionary> -->
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem
            Clicked="HeartButton_Clicked"
            Command="{Binding _ItemViewModel.HeartButtonClicked}"
            x:Name="HeartButton" />
    </ContentPage.ToolbarItems>


    <ScrollView Orientation="Vertical">
        <!--  Images  should be horizontal scroll  -->
        <Grid RowDefinitions="auto,auto">

            <Grid
                BackgroundColor="LightGray"
                Grid.Row="0"
                Padding="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Image
                    Aspect="AspectFit"
                    Grid.Row="0"
                    HeightRequest="300"
                    Source="{Binding _ItemViewModel.CurrentImage}"
                    VerticalOptions="Start" />
                <ImageButton
                    Command="{Binding NextImage_Clicked}"
                    HeightRequest="30"
                    HorizontalOptions="End"
                    Source="nexticon.png" />
                <ImageButton
                    Command="{Binding PreviousImage_Clicked}"
                    HeightRequest="30"
                    HorizontalOptions="Start"
                    Rotation="180"
                    Source="nexticon.png" />
            </Grid>

            <Grid
                BackgroundColor="White"
                Grid.Row="1"
                Padding="10,10,10,0"
                RowSpacing="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>

                <Grid
                    ColumnDefinitions="20,*,*"
                    Grid.Row="0"
                    Padding="5,0,0,0"
                    RowDefinitions="auto">

                    <Image
                        Grid.Column="0"
                        Grid.Row="0"
                        HeightRequest="25"
                        HorizontalOptions="StartAndExpand"
                        Source="coinsstackicon24px"
                        WidthRequest="25" />
                    <Label
                        FontAttributes="Bold"
                        FontSize="20"
                        Grid.Column="1"
                        Grid.Row="0"
                        Padding="8,2,0,0"
                        Text="{Binding _ItemViewModel.PricePerDay}"
                        TextColor="Black"
                        VerticalOptions="Center" />


                    <Grid
                        ColumnDefinitions="auto, auto"
                        Grid.Column="2"
                        Grid.Row="0"
                        HorizontalOptions="Center"
                        Margin="0,0,0,0"
                        VerticalOptions="Center">
                        <Label
                            FontSize="25"
                            Grid.Column="0"
                            Grid.Row="0"
                            Text="{Binding _ItemViewModel.Item.RatingAsString}"
                            TextColor="Black" />
                        <Image
                            Grid.Column="1"
                            Grid.Row="0"
                            Margin="0,0,0,0"
                            Source="blankstar" />
                    </Grid>

                    <!--  item owner profile link  -->

                    <Image
                        Grid.Column="2"
                        Grid.Row="0"
                        HeightRequest="40"
                        HorizontalOptions="End"
                        Source="blankprofileimage.jpg"
                        WidthRequest="40">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ProfileLink_Tapped}" />
                        </Image.GestureRecognizers>
                    </Image>

                </Grid>

                <Label
                    FontAttributes="Bold"
                    FontSize="20"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Grid.Row="1"
                    Text="{Binding _ItemViewModel.Name}"
                    TextColor="Black" />

                <Grid ColumnDefinitions="auto,*" Grid.Row="2">
                    <Label
                        FontSize="16"
                        Grid.Column="0"
                        Text="Upload date: "
                        TextColor="#a5a2a2" />
                    <Label
                        FontSize="16"
                        Grid.Column="1"
                        Text="{Binding _ItemViewModel.UploadDate}"
                        TextColor="#a5a2a2" />
                </Grid>

                <Label
                    FontAttributes="Bold"
                    FontSize="20"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Grid.Row="3"
                    Margin="0,10,0,0"
                    Text="Description: "
                    TextColor="Black" />

                <Label
                    Grid.Column="0"
                    Grid.Row="4"
                    Margin="0,0,0,10"
                    Text="{Binding _ItemViewModel.Description}"
                    TextColor="Black" />

                <Button
                    BackgroundColor="#2193f3"
                    Clicked="SendRequestTapped"
                    FontAttributes="Bold"
                    FontSize="17"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Grid.Row="5"
                    HeightRequest="45"
                    Margin="40,20,40,20"
                    Text="Select dates"
                    TextColor="White"
                    x:Name="RequestAndDatesButton" />

                <xc:CalendarView
                    BackwardsArrowCommand="{Binding NavigateCalendarCommand}"
                    BackwardsArrowCommandParameter="{Binding EventCalendar.BackwardsNavigationAmount}"
                    Days="{Binding EventCalendar.Days}"
                    DaysOfWeek="{Binding EventCalendar.DayNamesOrder}"
                    ForwardsArrowCommand="{Binding NavigateCalendarCommand}"
                    ForwardsArrowCommandParameter="{Binding EventCalendar.ForwardsNavigationAmount}"
                    Grid.Row="6"
                    IsVisible="False"
                    NavigatedDate="{Binding EventCalendar.NavigatedDate}"
                    Style="{StaticResource DefaultCalendarViewStyle}"
                    x:Name="MainCalendarView">
                    <xc:CalendarView.NavigationTemplate>
                        <ControlTemplate>
                            <xc:NavigationView
                                ArrowColor="{StaticResource ContentTextColor}"
                                BackgroundColor="Transparent"
                                BackwardsArrowCommand="{Binding BackwardsArrowCommand, Source={RelativeSource TemplatedParent}}"
                                BackwardsArrowCommandParameter="{Binding BackwardsArrowCommandParameter, Source={RelativeSource TemplatedParent}}"
                                ForwardsArrowCommand="{Binding ForwardsArrowCommand, Source={RelativeSource TemplatedParent}}"
                                ForwardsArrowCommandParameter="{Binding ForwardsArrowCommandParameter, Source={RelativeSource TemplatedParent}}"
                                HeightRequest="40"
                                Style="{StaticResource DefaultNavigationViewStyle}"
                                Text="{Binding Text, Source={RelativeSource TemplatedParent}}"
                                TextColor="{StaticResource ContentTextColor}" />
                        </ControlTemplate>
                    </xc:CalendarView.NavigationTemplate>

                    <xc:CalendarView.DayTemplate>
                        <DataTemplate x:DataType="{x:Type Models:EventDay}">
                            <!--  ContentView so that the margin is respected by the DaysView  -->
                            <ContentView>
                                <Border BackgroundColor="Transparent" Margin="2.5">

                                    <Border.StrokeShape>
                                        <Ellipse />
                                    </Border.StrokeShape>

                                    <xc:DayView
                                        CurrentMonthCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                        CurrentMonthCommandParameter="{Binding DateTime}"
                                        DateTime="{Binding DateTime}"
                                        HeightRequest="41"
                                        IsCurrentMonth="{Binding IsCurrentMonth}"
                                        IsInvalid="{Binding IsInvalid}"
                                        IsSelected="{Binding IsSelected}"
                                        IsToday="{Binding IsToday}"
                                        SelectedCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                        SelectedCommandParameter="{Binding DateTime}"
                                        Style="{StaticResource DefaultDayViewStyle}"
                                        TodayCommand="{Binding BindingContext.ChangeDateSelectionCommand, Source={x:Reference This}}"
                                        TodayCommandParameter="{Binding DateTime}">

                                        <xc:DayView.ControlTemplate>
                                            <ControlTemplate>
                                                <!--  Using a Grid to stack views on the z axis  -->
                                                <!--  TemplatedParent refers to the view that the ControlTemplate resides in  -->
                                                <Grid BindingContext="{Binding BindingContext, Source={RelativeSource TemplatedParent}}" RowSpacing="2">

                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="1.5*" />
                                                        <RowDefinition />
                                                    </Grid.RowDefinitions>

                                                    <!--  ContentPresenter displays the default content for the control  -->
                                                    <ContentPresenter
                                                        Grid.Row="0"
                                                        Grid.RowSpan="2"
                                                        VerticalOptions="Center" />

                                                    <StackLayout
                                                        BindableLayout.ItemsSource="{Binding Events}"
                                                        Grid.Row="1"
                                                        HorizontalOptions="Center"
                                                        Orientation="Horizontal"
                                                        Spacing="2.5">


                                                        <!--  todo: resolve this issue man  -->
                                                        <!--  I want the event indicators to only be visible when the DateTime is in the currently navigated month  -->
                                                        <!-- <StackLayout.IsVisible> -->
                                                        <!--     <MultiBinding Converter="{StaticResource AllTrueConverter}"> -->
                                                        <!--         <Binding Path="IsCurrentMonth" /> -->
                                                        <!--         <Binding Converter="{StaticResource InvertedBoolConverter}" Path="IsInvalid" /> -->
                                                        <!--     </MultiBinding> -->
                                                        <!-- </StackLayout.IsVisible> -->

                                                        <BindableLayout.ItemTemplate>
                                                            <DataTemplate x:DataType="{x:Type Models:Event}">
                                                                <BoxView
                                                                    Color="{Binding Color}"
                                                                    CornerRadius="100"
                                                                    HeightRequest="7"
                                                                    HorizontalOptions="CenterAndExpand"
                                                                    VerticalOptions="Center"
                                                                    WidthRequest="7" />
                                                            </DataTemplate>
                                                        </BindableLayout.ItemTemplate>

                                                    </StackLayout>

                                                </Grid>
                                            </ControlTemplate>
                                        </xc:DayView.ControlTemplate>

                                    </xc:DayView>
                                </Border>
                            </ContentView>
                        </DataTemplate>
                    </xc:CalendarView.DayTemplate>
                </xc:CalendarView>

                <Label
                    FontAttributes="Bold"
                    FontSize="20"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Grid.Row="7"
                    Margin="0,0,0,0"
                    Text="Reviews:"
                    TextColor="Black" />

                <Grid
                    Grid.Row="8"
                    Margin="5,0,0,0"
                    Padding="0"
                    RowDefinitions="30,*">


                    <CollectionView
                        Grid.Row="1"
                        ItemsSource="{Binding ItemReviewsCollection}"
                        Margin="0,3,5,0"
                        SelectionMode="None"
                        x:Name="ReviewsCollection">
                        <CollectionView.ItemsLayout>
                            <GridItemsLayout
                                HorizontalItemSpacing="5"
                                Orientation="Vertical"
                                Span="{OnIdiom Phone=1,
                                               Tablet=3,
                                               Desktop=3}"
                                VerticalItemSpacing="5" />
                        </CollectionView.ItemsLayout>
                        <CollectionView.ItemTemplate>
                            <DataTemplate>
                                <controls:ItemReviewController />
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>

                </Grid>
            </Grid>
        </Grid>
    </ScrollView>
</ContentPage>